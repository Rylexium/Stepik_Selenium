import pytest
from selenium.webdriver import Chrome
from selenium.common.exceptions import NoAlertPresentException # в начале файла
import math

class BasePage:
    def __init__(self, browser, url, timeout=10):
        self.browser = browser
        self.url = url
        self.browser.implicitly_wait(timeout)
    def open(self):
        self.browser.get(self.url)
        return self

class ProductPage(BasePage):
    def __init__(self, url=""):
        super().__init__(browser=Chrome(),
                         url=url)

    def press_basket_button(self):
        self.browser.find_element_by_css_selector("#add_to_basket_form > button").click()
        self.solve_quiz_and_get_code()

    def solve_quiz_and_get_code(self):
        alert = self.browser.switch_to.alert
        x = alert.text.split(" ")[2]
        answer = str(math.log(abs((12 * math.sin(float(x))))))
        alert.send_keys(answer)
        alert.accept()
        try:
            alert = self.browser.switch_to.alert
            alert_text = alert.text
            print(f"Your code: {alert_text}")
            alert.accept()
        except NoAlertPresentException:
            print("No second alert presented")

    def compare_product_names(self):
        product_name = self.browser.find_element_by_css_selector('.product_main h1').text
        message_product_name = self.browser.find_element_by_css_selector('#messages > div:nth-child(1) > div > strong').text
        assert product_name == message_product_name, 'Product name from access message should be same' \
                                                     ' a product name from product block'

    def compare_product_prices(self):
        product_price = self.browser.find_element_by_css_selector('.product_main .price_color').text
        product_price_message = self.browser.find_element_by_css_selector('#messages .alert-info strong').text
        assert product_price == product_price_message, 'Product price from access message should be same' \
                                                       ' a product price from product block'

class TestBasketFromProductPage:
    @pytest.mark.parametrize('url',
                             ["http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer0",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer1",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer2",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer3",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer4",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer5",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer6",
                              pytest.param(
                                  "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7",
                                  marks=pytest.mark.xfail),
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer8",
                              "http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer9"])
    def test_press_basket_button(self, url):
        page = ProductPage(url=url)
        print(url)
        page.open()
        page.press_basket_button()
        page.compare_product_prices()
        page.compare_product_names()